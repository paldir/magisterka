<Window x:Class="ProgramowanieKlockami.Widok.GłówneOkno"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:k="clr-namespace:ProgramowanieKlockami.Kontrolki"
        xmlns:mw="clr-namespace:ProgramowanieKlockami.ModelWidoku"
        xmlns:mwki="clr-namespace:ProgramowanieKlockami.ModelWidoku.Klocki.Inne"
        xmlns:mwkl="clr-namespace:ProgramowanieKlockami.ModelWidoku.Klocki.Logika"
        xmlns:mwkt="clr-namespace:ProgramowanieKlockami.ModelWidoku.Klocki.Tekst"
        xmlns:mwkz="clr-namespace:ProgramowanieKlockami.ModelWidoku.Klocki.Zmienne"
        xmlns:wk="clr-namespace:ProgramowanieKlockami.Widok.Konwertery"
        Title="GłówneOkno">
    <Window.DataContext>
        <mw:Główny></mw:Główny>
    </Window.DataContext>
    <Window.Resources>
        <Style x:Key="ListaZmiennych" TargetType="ComboBox">
            <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.Zmienne}"></Setter>
            <Setter Property="DisplayMemberPath" Value="Nazwa"></Setter>
        </Style>
        <Style x:Key="PrzyciskZwijania" TargetType="ToggleButton">
            <Setter Property="Width" Value="10"></Setter>
            <Setter Property="Height" Value="10"></Setter>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Setter Property="VerticalAlignment" Value="Bottom"></Setter>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <TranslateTransform X="1" Y="-1"></TranslateTransform>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MiejsceUpuszczaniaKlocków" TargetType="ItemsControl">
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="dd:DragDrop.IsDropTarget" Value="True"></Setter>
        </Style>
        <Style x:Key="MiejsceUpuszczaniaKlockówPionowych" BasedOn="{StaticResource MiejsceUpuszczaniaKlocków}" TargetType="ItemsControl">
            <Setter Property="MinHeight" Value="10"></Setter>
            <Setter Property="dd:DragDrop.DropHandler" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.ObsługującyUpuszczanieKlockówPionowych}"></Setter>
        </Style>
        <Style x:Key="MiejsceUpuszczaniaKlockówZwracającychWartość" BasedOn="{StaticResource MiejsceUpuszczaniaKlocków}" TargetType="ItemsControl">
            <Setter Property="MinWidth" Value="5"></Setter>
            <Setter Property="dd:DragDrop.DropHandler" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.ObsługującyUpuszczanieKlockówZwracającychWartość}"></Setter>
        </Style>
        <BooleanToVisibilityConverter x:Key="BooleanNaWidocznośćKonwerter"></BooleanToVisibilityConverter>
        <wk:SkupienieNaKolorObramowaniaKonwerter x:Key="SkupienieNaKolorObramowaniaKonwerter"></wk:SkupienieNaKolorObramowaniaKonwerter>
        <ControlTemplate x:Key="KlocekPionowySzablon" TargetType="k:KlocekPionowyKontrolka">
            <StackPanel Orientation="Horizontal">
                <Grid Style="{StaticResource GridKlocka}" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst.Kolor}">
                    <ContentPresenter></ContentPresenter>
                </Grid>
            </StackPanel>
        </ControlTemplate>
        <ControlTemplate x:Key="KlocekPionowyPrzyjmującyWartośćSzablon" TargetType="k:KlocekPionowyPrzyjmującyWartośćKontrolka">
            <StackPanel Orientation="Horizontal">
                <Grid Style="{StaticResource GridKlocka}" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst.Kolor}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                            <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.KomendaPrzejęciaSkupienia}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst}"></i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Border BorderThickness="3" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst.KolorObramowania}">
                        <ContentPresenter></ContentPresenter>
                    </Border>
                </Grid>
                <ItemsControl Style="{StaticResource MiejsceUpuszczaniaKlockówZwracającychWartość}" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst.Wartość}"></ItemsControl>
            </StackPanel>
        </ControlTemplate>
        <ControlTemplate x:Key="KlocekPionowyZZawartościąSzablon" TargetType="k:KlocekPionowyZZawartościąKontrolka">
            <StackPanel Orientation="Horizontal">
                <StackPanel Margin="0,0,0,1">
                    <StackPanel Orientation="Horizontal" Margin="1,1,1,0" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst.Kolor}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.KomendaPrzejęciaSkupienia}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst}"></i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Border BorderThickness="3,3,3,0" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst.KolorObramowania}">
                            <StackPanel Orientation="Horizontal">
                                <Grid MinWidth="6"></Grid>
                                <Grid>
                                    <Border BorderThickness="0,0,0,3" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst.KolorObramowania}">
                                        <Grid>
                                            <ContentPresenter HorizontalAlignment="Center"></ContentPresenter>
                                            <ToggleButton Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst.OdwrócenieWidoczności}" Style="{StaticResource PrzyciskZwijania}"></ToggleButton>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                    <DockPanel LastChildFill="True" Margin="1,0,0,0"  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst.Widoczny, Converter={StaticResource BooleanNaWidocznośćKonwerter}}">
                        <Grid Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst.Kolor}" MinWidth="12">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.KomendaPrzejęciaSkupienia}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst}"></i:InvokeCommandAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Border BorderThickness="3,0" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst.KolorObramowania}"></Border>
                        </Grid>
                        <StackPanel Margin="1,1,0,5">
                            <ItemsControl Style="{StaticResource MiejsceUpuszczaniaKlockówPionowych}" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst.Zawartość}"></ItemsControl>
                        </StackPanel>
                    </DockPanel>
                    <StackPanel Orientation="Horizontal" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst.Kolor}" HorizontalAlignment="Left" Margin="1,0,0,0">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.KomendaPrzejęciaSkupienia}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst}"></i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Border BorderThickness="3,0,3,3" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst.KolorObramowania}">
                            <StackPanel Orientation="Horizontal">
                                <Grid MinWidth="6"></Grid>
                                <Grid MinHeight="9" Width="40">
                                    <Border BorderThickness="0,3,0,0" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst.KolorObramowania}"></Border>
                                </Grid>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                </StackPanel>
            </StackPanel>
        </ControlTemplate>
        <ControlTemplate x:Key="KlocekPionowyZZawartościąPrzyjmującyWartośćSzablon" TargetType="k:KlocekPionowyZZawartościąPrzyjmującyWartośćKontrolka">
            <StackPanel Orientation="Horizontal">
                <StackPanel Margin="0,0,0,1">
                    <StackPanel Orientation="Horizontal">
                        <StackPanel Orientation="Horizontal" Margin="1,1,1,0" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst.Kolor}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.KomendaPrzejęciaSkupienia}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst}"></i:InvokeCommandAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Border BorderThickness="3,3,3,0" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst.KolorObramowania}">
                                <StackPanel Orientation="Horizontal">
                                    <Grid MinWidth="6"></Grid>
                                    <Grid>
                                        <Border BorderThickness="0,0,0,3" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst.KolorObramowania}">
                                            <Grid>
                                                <ContentPresenter HorizontalAlignment="Center"></ContentPresenter>
                                                <ToggleButton Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst.OdwrócenieWidoczności}" Style="{StaticResource PrzyciskZwijania}"></ToggleButton>
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </StackPanel>
                            </Border>
                        </StackPanel>
                        <ItemsControl Style="{StaticResource MiejsceUpuszczaniaKlockówZwracającychWartość}" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst.Wartość}"></ItemsControl>
                    </StackPanel>
                    <DockPanel LastChildFill="True" Margin="1,0,0,0"  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst.Widoczny, Converter={StaticResource BooleanNaWidocznośćKonwerter}}">
                        <Grid Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst.Kolor}" MinWidth="12">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.KomendaPrzejęciaSkupienia}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst}"></i:InvokeCommandAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Border BorderThickness="3,0" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst.KolorObramowania}"></Border>
                        </Grid>
                        <StackPanel Margin="1,1,0,5">
                            <ItemsControl Style="{StaticResource MiejsceUpuszczaniaKlockówPionowych}" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst.Zawartość}"></ItemsControl>
                        </StackPanel>
                    </DockPanel>
                    <StackPanel Orientation="Horizontal" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst.Kolor}" HorizontalAlignment="Left" Margin="1,0,0,0">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.KomendaPrzejęciaSkupienia}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst}"></i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Border BorderThickness="3,0,3,3" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst.KolorObramowania}">
                            <StackPanel Orientation="Horizontal">
                                <Grid MinWidth="6"></Grid>
                                <Grid MinHeight="9" Width="40">
                                    <Border BorderThickness="0,3,0,0" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst.KolorObramowania}"></Border>
                                </Grid>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                </StackPanel>
            </StackPanel>
        </ControlTemplate>
        <ControlTemplate x:Key="KlocekZwracającyWartośćSzablon" TargetType="k:KlocekZwracającyWartośćKontrolka">
            <StackPanel Orientation="Horizontal">
                <StackPanel>
                    <Grid Style="{StaticResource GridKlocka}" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst.Kolor}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.KomendaPrzejęciaSkupienia}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst}"></i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Border BorderThickness="3" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Kontekst.KolorObramowania}">
                            <ContentPresenter></ContentPresenter>
                        </Border>
                    </Grid>
                </StackPanel>
            </StackPanel>
        </ControlTemplate>
        <DataTemplate DataType="{x:Type mwki:RozpoczęcieProgramu}">
            <k:KlocekPionowyZZawartościąKontrolka Template="{StaticResource KlocekPionowyZZawartościąSzablon}">
                <StackPanel Style="{StaticResource PanelKlockaNiekońcowego}">
                    <TextBlock Style="{StaticResource TekstKlocka}">Główna funkcja</TextBlock>
                </StackPanel>
            </k:KlocekPionowyZZawartościąKontrolka>
        </DataTemplate>
        <DataTemplate DataType="{x:Type mwkl:Jeżeli}">
            <k:KlocekPionowyZZawartościąPrzyjmującyWartośćKontrolka Template="{StaticResource KlocekPionowyZZawartościąPrzyjmującyWartośćSzablon}">
                <StackPanel Style="{StaticResource PanelKlockaNiekońcowego}">
                    <TextBlock Style="{StaticResource TekstKlocka}">Jeżeli</TextBlock>
                </StackPanel>
            </k:KlocekPionowyZZawartościąPrzyjmującyWartośćKontrolka>
        </DataTemplate>
        <DataTemplate DataType="{x:Type mwkl:Porównanie}">
            <k:KlocekZwracającyWartośćKontrolka Template="{StaticResource KlocekZwracającyWartośćSzablon}">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Grid Margin="5">
                            <ItemsControl Style="{StaticResource MiejsceUpuszczaniaKlockówZwracającychWartość}" ItemsSource="{Binding WartośćPierwsza}" MinHeight="20" MinWidth="10" Margin="1" Background="White"></ItemsControl>
                        </Grid>
                        <StackPanel VerticalAlignment="Center">
                            <ComboBox>
                                <ComboBox.Items>
                                    <ComboBoxItem IsSelected="True">=</ComboBoxItem>
                                    <ComboBoxItem>!=</ComboBoxItem>
                                    <ComboBoxItem>&lt;</ComboBoxItem>
                                    <ComboBoxItem>&lt;=</ComboBoxItem>
                                    <ComboBoxItem>&gt;</ComboBoxItem>
                                    <ComboBoxItem>&gt;=</ComboBoxItem>
                                </ComboBox.Items>
                            </ComboBox>
                        </StackPanel>
                        <Grid Margin="5">
                            <ItemsControl Style="{StaticResource MiejsceUpuszczaniaKlockówZwracającychWartość}" ItemsSource="{Binding WartośćDruga}" MinHeight="20" MinWidth="10" Margin="1" Background="White"></ItemsControl>
                        </Grid>
                    </StackPanel>
                </StackPanel>
            </k:KlocekZwracającyWartośćKontrolka>
        </DataTemplate>
        <DataTemplate DataType="{x:Type mwkt:Napis}">
            <k:KlocekZwracającyWartośćKontrolka Template="{StaticResource KlocekZwracającyWartośćSzablon}">
                <StackPanel Style="{StaticResource PanelKlockaKońcowego}">
                    <TextBlock Style="{StaticResource TekstKlocka}">"</TextBlock>
                    <TextBox></TextBox>
                    <TextBlock Style="{StaticResource TekstKlocka}">"</TextBlock>
                </StackPanel>
            </k:KlocekZwracającyWartośćKontrolka>
        </DataTemplate>
        <DataTemplate DataType="{x:Type mwkt:Wyświetl}">
            <k:KlocekPionowyPrzyjmującyWartośćKontrolka Template="{StaticResource KlocekPionowyPrzyjmującyWartośćSzablon}">
                <StackPanel Style="{StaticResource PanelKlockaNiekońcowego}">
                    <TextBlock Style="{StaticResource TekstKlocka}">Wyświetl</TextBlock>
                </StackPanel>
            </k:KlocekPionowyPrzyjmującyWartośćKontrolka>
        </DataTemplate>
        <DataTemplate DataType="{x:Type mwkz:UstawZmienną}">
            <k:KlocekPionowyPrzyjmującyWartośćKontrolka Template="{StaticResource KlocekPionowyPrzyjmującyWartośćSzablon}">
                <StackPanel  Style="{StaticResource PanelKlockaNiekońcowego}">
                    <TextBlock Style="{StaticResource TekstKlocka}">Ustaw</TextBlock>
                    <ComboBox Style="{StaticResource ListaZmiennych}"></ComboBox>
                    <TextBlock Style="{StaticResource TekstKlocka}">na</TextBlock>
                </StackPanel>
            </k:KlocekPionowyPrzyjmującyWartośćKontrolka>
        </DataTemplate>
        <DataTemplate DataType="{x:Type mwkz:WartośćZmiennej}">
            <k:KlocekZwracającyWartośćKontrolka Template="{StaticResource KlocekZwracającyWartośćSzablon}">
                <StackPanel Style="{StaticResource PanelKlockaKońcowego}">
                    <ComboBox Style="{StaticResource ListaZmiennych}"></ComboBox>
                </StackPanel>
            </k:KlocekZwracającyWartośćKontrolka>
        </DataTemplate>
    </Window.Resources>
    <Grid>
        <DockPanel LastChildFill="True">
            <TabControl TabStripPlacement="Left" Width="200">
                <TabItem Header="Logika">
                    <ItemsControl dd:DragDrop.IsDragSource="True" ItemsSource="{Binding KlockiLogiczne}"></ItemsControl>
                </TabItem>
                <TabItem Header="Tekst">
                    <ItemsControl dd:DragDrop.IsDragSource="True" ItemsSource="{Binding KlockiTekstowe}"></ItemsControl>
                </TabItem>
                <TabItem Header="Zmienne">
                    <ItemsControl dd:DragDrop.IsDragSource="True" ItemsSource="{Binding KlockiDotycząceZmiennych}"></ItemsControl>
                </TabItem>
            </TabControl>
            <GroupBox Header="Zmienne">
                <StackPanel>
                    <ListBox ItemsSource="{Binding Zmienne}" IsSynchronizedWithCurrentItem="True" SelectionMode="Single">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBox Text="{Binding Path=Nazwa, UpdateSourceTrigger=LostFocus}"></TextBox>
                                    <Button Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.KomendaUsunięciaZmiennej}" CommandParameter="{Binding}">Usuń</Button>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <StackPanel Orientation="Horizontal">
                        <Label>Nowa:</Label>
                        <TextBox Width="50" Text="{Binding NazwaNowejZmiennej, UpdateSourceTrigger=PropertyChanged}">
                            <TextBox.InputBindings>
                                <KeyBinding Key="Enter" Command="{Binding KomendaDodaniaZmiennej}"></KeyBinding>
                            </TextBox.InputBindings>
                        </TextBox>
                    </StackPanel>
                </StackPanel>
            </GroupBox>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>
                <ScrollViewer Grid.Row="0" VerticalScrollBarVisibility="Visible">
                    <ContentControl Content="{Binding RozpoczęcieProgramu}">
                        <ContentControl.LayoutTransform>
                            <ScaleTransform ScaleX="{Binding Powiększenie}" ScaleY="{Binding Powiększenie}"></ScaleTransform>
                        </ContentControl.LayoutTransform>
                    </ContentControl>
                </ScrollViewer>
                <DockPanel Grid.Row="1" LastChildFill="True">
                    <Slider Minimum="0.25" Maximum="4" Value="{Binding Powiększenie}" AutoToolTipPlacement="TopLeft" AutoToolTipPrecision="2" TickFrequency="0.25" TickPlacement="BottomRight" IsSnapToTickEnabled="True"></Slider>
                </DockPanel>
            </Grid>
        </DockPanel>
    </Grid>
</Window>